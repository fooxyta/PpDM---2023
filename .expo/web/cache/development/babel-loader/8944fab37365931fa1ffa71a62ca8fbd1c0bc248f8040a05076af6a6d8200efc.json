{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TelaCapa() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela de in\\xEDcio\"\n    }), _jsx(Button, {\n      title: \"Cadastrar\",\n      onPress: function onPress() {\n        navigation.navigate('Cadastro');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaCadastro() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Aqui voc\\xEA faz seu cadastro\"\n    }), _jsx(Button, {\n      title: \"Esqueci minha senha\",\n      onPress: function onPress() {\n        navigation.navigate('Esqueci minha senha');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaEsqueceuSenha() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela de \\\"esqueci a senha\\\"\"\n    }), _jsx(Button, {\n      title: \"tela escolhas\",\n      onPress: function onPress() {\n        navigation.navigate('Escolhas');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaEscolhas() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela principal para escolhas\"\n    }), _jsx(Button, {\n      title: \"Autores que voc\\xEA conhece\",\n      onPress: function onPress() {\n        navigation.navigate('Ver Autores');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaAutoresConhece() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela de autores que voc\\xEA conhece\"\n    }), _jsx(Button, {\n      title: \"Conhe\\xE7a\",\n      onPress: function onPress() {\n        navigation.navigate('Conheça novos autores');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaAutoresConhece1() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Esses s\\xE3o os exemplos de autores que voc\\xEA conhece\"\n    }), _jsx(Button, {\n      title: \"Conhe\\xE7a\",\n      onPress: function onPress() {\n        navigation.navigate('Conheça novos autores');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaConhecaAutores() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela para conhecer novos autores\"\n    }), _jsx(Button, {\n      title: \"Poesias do momento\",\n      onPress: function onPress() {\n        navigation.navigate('Novas poesias');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaPerfil() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela do seu perfil\"\n    }), _jsx(Button, {\n      title: \"Voltar\",\n      onPress: function onPress() {\n        navigation.navigate('Escolhas');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"In\\xEDcio\",\n        component: TelaInicial\n      }), _jsx(Stack.Screen, {\n        name: \"Cadastro\",\n        component: TelaCadastro\n      }), _jsx(Stack.Screen, {\n        name: \"Esqueci minha senha\",\n        component: TelaEsqueceuSenha\n      }), _jsx(Stack.Screen, {\n        name: \"Principal\",\n        component: TelaPrincipal\n      }), _jsx(Stack.Screen, {\n        name: \"Ver Resenhas\",\n        component: TelaDasResenhas\n      }), _jsx(Stack.Screen, {\n        name: \"Novas Resenhas\",\n        component: TelaNovasResenhas\n      }), _jsx(Stack.Screen, {\n        name: \"Perfil\",\n        component: TelaPerfil\n      }), _jsx(Stack.Screen, {\n        name: \"In\\xEDcio\",\n        component: TelaInicial\n      }), _jsx(Stack.Screen, {\n        name: \"Cadastro\",\n        component: TelaCadastro\n      }), _jsx(Stack.Screen, {\n        name: \"Esqueceu Senha\",\n        component: TelaEsqueceuSenha\n      }), _jsx(Stack.Screen, {\n        name: \"Principal\",\n        component: TelaPrincipal\n      }), _jsx(Stack.Screen, {\n        name: \"Ver Resenhas\",\n        component: TelaDasResenhas\n      }), _jsx(Stack.Screen, {\n        name: \"Novas Resenhas\",\n        component: TelaNovasResenhas\n      }), _jsx(Stack.Screen, {\n        name: \"Perfil\",\n        component: TelaPerfil\n      }), _jsx(Stack.Screen, {\n        name: \"Perfil\",\n        component: TelaPerfil\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Button","NavigationContainer","useNavigation","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","TelaCapa","navigation","style","styles","container","children","title","onPress","navigate","TelaCadastro","TelaEsqueceuSenha","TelaEscolhas","TelaAutoresConhece","TelaAutoresConhece1","TelaConhecaAutores","TelaPerfil","App","Stack","Navigator","Screen","name","component","TelaInicial","TelaPrincipal","TelaDasResenhas","TelaNovasResenhas","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/aluno/Documentos/PpDM---2023/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport { NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction TelaCapa(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela de início</Text>\n      <Button title=\"Cadastrar\" onPress={()=>{\n        navigation.navigate ('Cadastro')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaCadastro(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Aqui você faz seu cadastro</Text>\n      <Button title=\"Esqueci minha senha\" onPress={()=>{\n        navigation.navigate ('Esqueci minha senha')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaEsqueceuSenha(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela de \"esqueci a senha\"</Text>\n      <Button title=\"tela escolhas\" onPress={()=>{\n        navigation.navigate ('Escolhas')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaEscolhas(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela principal para escolhas</Text>\n      <Button title=\"Autores que você conhece\" onPress={()=>{\n        navigation.navigate ('Ver Autores')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaAutoresConhece(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela de autores que você conhece</Text>\n      <Button title=\"Conheça\" onPress={()=>{\n        navigation.navigate ('Conheça novos autores')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaAutoresConhece1(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Esses são os exemplos de autores que você conhece</Text>\n      <Button title=\"Conheça\" onPress={()=>{\n        navigation.navigate ('Conheça novos autores')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaConhecaAutores(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela para conhecer novos autores</Text>\n      <Button title=\"Poesias do momento\" onPress={()=>{\n        navigation.navigate ('Novas poesias')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaPerfil(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela do seu perfil</Text>\n      <Button title=\"Voltar\" onPress={()=>{\n        navigation.navigate ('Escolhas')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nexport default function App() {\n  const Stack = createNativeStackNavigator()\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Início\" component={TelaInicial} />\n        <Stack.Screen name=\"Cadastro\" component={TelaCadastro} />\n        <Stack.Screen name=\"Esqueci minha senha\" component={TelaEsqueceuSenha} />\n        <Stack.Screen name=\"Principal\" component={TelaPrincipal} />\n        <Stack.Screen name=\"Ver Resenhas\" component={TelaDasResenhas} />\n        <Stack.Screen name=\"Novas Resenhas\" component={TelaNovasResenhas} />\n        <Stack.Screen name=\"Perfil\" component={TelaPerfil} />\n        <Stack.Screen name=\"Início\" component={TelaInicial} />\n        <Stack.Screen name=\"Cadastro\" component={TelaCadastro} />\n        <Stack.Screen name=\"Esqueceu Senha\" component={TelaEsqueceuSenha} />\n        <Stack.Screen name=\"Principal\" component={TelaPrincipal} />\n        <Stack.Screen name=\"Ver Resenhas\" component={TelaDasResenhas} />\n        <Stack.Screen name=\"Novas Resenhas\" component={TelaNovasResenhas} />\n        <Stack.Screen name=\"Perfil\" component={TelaPerfil} />\n        <Stack.Screen name=\"Perfil\" component={TelaPerfil} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n\n}\n\n const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}