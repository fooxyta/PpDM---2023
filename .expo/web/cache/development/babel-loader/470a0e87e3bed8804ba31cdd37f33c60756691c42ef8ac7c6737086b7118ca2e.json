{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TelaInicial() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Teste do React Native Meu Mano\"\n    }), _jsx(Button, {\n      title: \"CADASTRAR\",\n      onPress: function onPress() {\n        n;\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"In\\xEDcio\",\n        component: TelaInicial\n      }), _jsx(Stack.Screen, {\n        name: \"Cadastro\",\n        component: TelaCadastro\n      })]\n    })\n  });\n}\nfunction TelaCadastro() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Seu cadastro est\\xE1 aqui meu amigo(a)\"\n    }), _jsx(Button, {\n      title: \"VOLTAR\",\n      onPress: function onPress() {\n        console.log(\"Apertou o botão VOLTAR :p\");\n      }\n    }), \"navigation.navigate('In\\xEDcio')\", _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Button","NavigationContainer","useNavigation","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","TelaInicial","navigation","style","styles","container","children","title","onPress","n","App","Stack","Navigator","Screen","name","component","TelaCadastro","console","log","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/aluno/Documentos/PpDM---2023/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction TelaInicial(){\n  const navigation = useNavigation();\n  return (\n    \n      <View style={styles.container}>\n      <Text>Teste do React Native Meu Mano</Text>\n      <Button title='CADASTRAR' onPress={() => {n}} ></Button>\n       <StatusBar style=\"auto\"/>\n      </View>\n    );\n} \n\n export default function App() {\n  const Stack = createNativeStackNavigator();\n    return(\n      <NavigationContainer> \n        <Stack.Navigator>\n          <Stack.Screen name=\"Início\" component={TelaInicial} />\n          <Stack.Screen name=\"Cadastro\" component={TelaCadastro} />\n        </Stack.Navigator>\n      </NavigationContainer>\n\n    );\n }\n\n function TelaCadastro(){\n    \n  return (\n     <View style={styles.container}>\n      <Text>Seu cadastro está aqui meu amigo(a)</Text>\n      <Button title='VOLTAR' onPress={() => {console.log(\"Apertou o botão VOLTAR :p\"); }} ></Button>\n     navigation.navigate('Início')\n      <StatusBar style=\"auto\"/>\n      </View>\n    );\n} \n\n  const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE5C,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,0BAA0B;AAC7E,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5E,SAASC,WAAWA,CAAA,EAAE;EACpB,IAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAClC,OAEIK,KAAA,CAACR,IAAI;IAACW,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC9BR,IAAA,CAACP,IAAI;MAAAe,QAAA,EAAC;IAA8B,CAAM,CAAC,EAC3CR,IAAA,CAACL,MAAM;MAACc,KAAK,EAAC,WAAW;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAACC,CAAC;MAAA;IAAE,CAAU,CAAC,EACvDX,IAAA,CAACT,SAAS;MAACc,KAAK,EAAC;IAAM,CAAC,CAAC;EAAA,CACpB,CAAC;AAEb;AAEC,eAAe,SAASO,GAAGA,CAAA,EAAG;EAC7B,IAAMC,KAAK,GAAGf,0BAA0B,CAAC,CAAC;EACxC,OACEE,IAAA,CAACJ,mBAAmB;IAAAY,QAAA,EAClBN,KAAA,CAACW,KAAK,CAACC,SAAS;MAAAN,QAAA,GACdR,IAAA,CAACa,KAAK,CAACE,MAAM;QAACC,IAAI,EAAC,WAAQ;QAACC,SAAS,EAAEd;MAAY,CAAE,CAAC,EACtDH,IAAA,CAACa,KAAK,CAACE,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEC;MAAa,CAAE,CAAC;IAAA,CAC1C;EAAC,CACC,CAAC;AAG3B;AAEA,SAASA,YAAYA,CAAA,EAAE;EAEtB,OACGhB,KAAA,CAACR,IAAI;IAACW,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC7BR,IAAA,CAACP,IAAI;MAAAe,QAAA,EAAC;IAAmC,CAAM,CAAC,EAChDR,IAAA,CAACL,MAAM;MAACc,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAACS,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAAE;IAAE,CAAU,CAAC,oCAE9F,EAAApB,IAAA,CAACT,SAAS;MAACc,KAAK,EAAC;IAAM,CAAC,CAAC;EAAA,CACnB,CAAC;AAEb;AAEE,IAAMC,MAAM,GAAGd,UAAU,CAAC6B,MAAM,CAAC;EACjCd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}